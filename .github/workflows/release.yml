name: Relase

on: push
  # - push
  #   tags:
  #     - "v*.*.*"

jobs:
  publish:
    name: Publishing for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        rust: [stable]
        include:
          - os: macos-latest
            artifact_prefix: macos
            target: aarch64-apple-darwin
            binary_postfix: ""
          - os: ubuntu-latest
            artifact_prefix: linux
            target: x86_64-unknown-linux-gnu
            binary_postfix: ""
          - os: windows-latest
            artifact_prefix: windows
            target: x86_64-pc-windows-msvc
            binary_postfix: ".exe"

    steps:
      - uses: actions/checkout@v2
      - name: Installing Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Installing needed macOS dependencies
        if: matrix.os == 'macos-latest'
        run: brew install openssl@1.1
      - name: Installing needed Ubuntu dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y -qq pkg-config libssl-dev libxcb1-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev
      - name: Running cargo build
        run: cargo build --release --all-features --target ${{ matrix.target }}
      - name: Packaging final binary
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release

          BINARY_NAME=cnv${{ matrix.binary_postfix }}
          strip $BINARY_NAME

          RELEASE_NAME=cli-network-viewer-${{ matrix.artifact_prefix }}
          tar czvf $RELEASE_NAME.tar.gz $BINARY_NAME

          if [[ ${{ runner.os }} == 'Windows' ]]; then
            certutil -hashfile $RELEASE_NAME.tar.gz sha256 | grep -E [A-Fa-f0-9]{64} > $RELEASE_NAME.sha256
          else
            shasum -a 256 $RELEASE_NAME.tar.gz > $RELEASE_NAME.sha256
          fi
      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: target/${{ matrix.target }}/release/cli-network-viewer-${{ matrix.artifact_prefix }}.tar.gz
      - name: Upload sha
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: target/${{ matrix.target }}/release/cli-network-viewer-${{ matrix.artifact_prefix }}.sha256
